plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco'
}

group = 'com.planetlandV2'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-jdbc'

	// Spring security 설정
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

	// querydsl 설정
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	runtimeOnly 'com.h2database:h2'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}

jacoco {
	toolVersion = "0.8.9"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}

	getClassDirectories().setFrom(
			files(classDirectories.files.collect {
				fileTree(dir: it, exclude: [
						'**/constant','**/domain','**/request','**/response','**/image',
						'**/Enum','**/exception','**/config','**/repository','**/crypto','**/*Application*'// dto package 내부는 제외
				])
			})
	)
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.gradle.*']

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.90
			}
		}
	}
}


